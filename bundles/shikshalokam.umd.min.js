!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("rxjs"),require("rxjs/operators"),require("@angular/forms"),require("@angular/material/select"),require("@angular/common"),require("@angular/material"),require("@angular/router"),require("@angular/http"),require("@angular/core"),require("@angular/common/http"),require("@angular/material/dialog"),require("@angular/material/button"),require("@angular/material/progress-spinner"),require("@angular/material/snack-bar"),require("ngx-spinner")):"function"==typeof define&&define.amd?define("shikshalokam",["exports","rxjs","rxjs/operators","@angular/forms","@angular/material/select","@angular/common","@angular/material","@angular/router","@angular/http","@angular/core","@angular/common/http","@angular/material/dialog","@angular/material/button","@angular/material/progress-spinner","@angular/material/snack-bar","ngx-spinner"],n):n(e.shikshalokam={},e.rxjs,e.rxjs.operators,e.ng.forms,e.ng.material.select,e.ng.common,e.ng.material,e.ng.router,e.ng.http,e.ng.core,e.ng.common.http,e.ng.material.dialog,e.ng.material.button,e.ng.material["progress-spinner"],e.ng.material["snack-bar"],e.i2)}(this,function(e,t,r,o,n,a,i,s,p,l,c,d,u,g,m,f){"use strict";var h=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:l.Component,args:[{selector:"app-breadcrumb",template:'<div class =" breadCrumbheading">\n  <span *ngFor="let rout of breadcrumbRoute;last as isLast" [routerLink]="[rout.url,rout.id ]"routerLinkActive="active">\n   {{rout.label}} <span *ngIf="!isLast"> > </span>\n   </span>\n</div>\n',styles:[".breadCrumbheading{padding-bottom:50px}.active{color:var(--primary-color)}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={breadcrumbRoute:[{type:l.Input}]},e}(),v=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:l.Component,args:[{selector:"dashboard-blocks",template:'\n<div class="_flex-box _justify-content-center wrapper">\n\n  <div class="_full-width ">\n    <div *ngFor="let dashBoard of list" >\n      <div class=" col-lg-3 col-md-4 col-sm-6 col-xs-12 margin-top _justify-content-center flex-box" routerLink="{{dashBoard.anchorLink}}" title="{{dashBoard.tooltip|translate}}">\n        <div class=" box iconBox">\n          <i class="material-icons folderIcon">\n            reorder\n          </i>\n        </div>\n        <div class=" box ">\n          <div class="description">\n              {{dashBoard.tooltip|translate}}\n          </div>\n          \n        </div>\n      </div>\n\n\n    </div>\n  </div>\n</div>',styles:[".flex-box{display:flex;flex-direction:column;justify-content:center;align-items:center;cursor:pointer}.description{color:var(--grey-color);text-overflow:ellipsis;white-space:nowrap;overflow:hidden;width:110px;text-align:center}.dashBoardIcon{width:200px;height:200px;display:flex;flex-direction:column;justify-content:center;align-items:center;cursor:pointer;border-radius:20px;margin:0 20px}.margin-top{margin-top:20px}.folderIcon{font-size:70px;color:var(--primary-color);display:flex;align-items:center}.wrapper{padding:0 20px}.box{width:100%;display:flex;justify-content:center}.iconBox{background-image:linear-gradient(to top,#e8eced 10%,#fff 90%);height:120px;width:120px;border:1px solid var(--grey-color);border-radius:15px}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={list:[{type:l.Input}]},e}(),y=function(){function e(e,n){this.dialogRef=e,this.data=n}return e.prototype.ngOnInit=function(){},e.prototype.onCancel=function(){this.dialogRef.close()},e.decorators=[{type:l.Component,args:[{selector:"app-dialog-box",template:'<h1 mat-dialog-title>{{\'message.alertHeading\' | translate}}</h1>\n<div mat-dialog-content>\n  <p>{{\'message.alertMessage\' | translate}}</p>\n</div>\n<div mat-dialog-actions class="alingCenterline" >\n  <button mat-button  class="margin" (click)="onCancel()">{{\'buttons.cancel\' | translate }}</button>\n  <button mat-button class="btnColor margin"   [mat-dialog-close] = "true"   >{{\'buttons.complete\' | translate}}</button>\n</div>\n',styles:[".btnColor{background-color:var(--primary-color);color:var(--white-color)}.alingCenterline{display:flex;align-items:center;justify-content:flex-end}.margin{margin:15px 0 0 10px}"]}]}],e.ctorParameters=function(){return[{type:i.MatDialogRef},{type:undefined,decorators:[{type:l.Inject,args:[i.MAT_DIALOG_DATA]}]}]},e}(),b=function(){function e(){this.emitResponseType=new l.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.changeResponseType=function(e){this.emitResponseType.emit(e)},e.decorators=[{type:l.Component,args:[{selector:"app-dropdown-field",template:'<div [formGroup]="genericForm" >\n  <mat-form-field class=" col-sm-6 fixSize _halfWidth" *ngIf="genericData.input == \'radio\' ||genericData.input == \'dropdown\'">\n    <mat-select [disabled]="!genericData.editable" placeholder="{{genericData.label}}" formControlName="{{genericData.field}}" required >\n        <mat-option *ngFor="let opt of genericData.options" [value]="opt.value" (click)="changeResponseType(opt.value)" >\n          {{opt.label}}\n        </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field class=" col-sm-6 fixSize _halfWidth"  *ngIf="genericData.input == \'multiselect\' ">\n      <mat-select [disabled]="!genericData.editable" placeholder="{{genericData.label}}" formControlName="{{genericData.field}}" required multiple >\n          <mat-option *ngFor="let opt of genericData.options" [value]="opt.value" (click)="changeResponseType">\n            {{opt.label}}\n          </mat-option>\n      </mat-select>\n    </mat-form-field>\n</div>',styles:[".space{padding:0 10px}.bold{font-size:15px;font-weight:1000}.right{text-align:right}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={genericData:[{type:l.Input}],genericForm:[{type:l.Input}],genericEdit:[{type:l.Input}],emitResponseType:[{type:l.Output}]},e}(),x=function(){function e(){this.editnewquestion=new l.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.changeResponseType=function(e,n){this.genericData[n].value=e},e.prototype.editquestion=function(e){this.editnewquestion.emit(e)},e.decorators=[{type:l.Component,args:[{selector:"app-dynamic-form",template:'<div class="col-sm-12 " [formGroup]= "genericForm"  *ngIf=" genericForm" >\n  <div *ngFor="let data of genericData ; let i  = index" >\n    <app-dropdown-field *ngIf="(data.input == \'radio\'|| data.input == \'dropdown\' || data.input == \'multiselect\' ) && data.visible " [genericData]="data" [genericForm]="genericForm" (emitResponseType)="changeResponseType($event,i)"></app-dropdown-field>\n  \n    <app-text-field *ngIf="data.input == \'text\'  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-text-field>\n    \n    <app-textarea-field *ngIf="data.input == \'textarea\'  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-textarea-field>\n   \n    <app-number-field *ngIf="data.input == \'number\'  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-number-field>\n    \n    <app-select-field *ngIf="data.input == \'boolean\'  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-select-field>\n\n    <app-form-array-field (editquestion)="editquestion($event)" *ngIf="data.input == \'array\'  && data.visible " [genericData]="data" [genericForm]="genericForm" [genericEdit]= "genericEdit"></app-form-array-field>\n\n    <br>\n  </div> \n\n\n</div>',styles:[""]}]}],e.ctorParameters=function(){return[]},e.propDecorators={genericData:[{type:l.Input}],genericForm:[{type:l.Input}],genericEdit:[{type:l.Input}],editnewquestion:[{type:l.Output}]},e}(),I=function(){function e(){this.editquestion=new l.EventEmitter}return e.prototype.ngOnInit=function(){this.questionCount=this.genericData.array.length||1},e.prototype.editQuestion=function(e){"add"==e?this.questionCount++:"reset"==e?this.questionCount=1:this.questionCount-=1,this.editquestion.emit(e)},e.decorators=[{type:l.Component,args:[{selector:"app-form-array-field",template:'<div [formGroup]="genericForm" *ngIf="genericForm">\n  <div formArrayName="question" >\n    <div *ngFor="let arrayOption of genericData.array; let i = index" class="_flex-box _justify-content-center" >\n      <mat-form-field class="col-sm-11 fixSize _halfWidth">\n          <input matInput type="text" value="{{arrayOption.value}}" placeholder="{{genericData.label}} " formControlName="{{i}}"\n          required>\n      </mat-form-field>\n      \n\n        <button class ="col-sm-1"*ngIf="questionCount >1" mat-raised-button (click)="editQuestion(i)" color="warn">\n              \n            <i class="material-icons">\n                close\n                </i>\n          </button>\n        </div>\n    \n  </div>\n  <button mat-raised-button (click)="editQuestion(\'add\')" class="_primary-btn btn-margin">\n              \n      {{\'buttons.addNew\'| translate}}\n      <i class="material-icons">\n          add\n          </i>\n    </button>\n    <button mat-raised-button *ngIf="questionCount>1"(click)="editQuestion(\'reset\')" color="warn" [disabled]=" questionCount<2" class="btn-margin">\n              \n        {{\'buttons.removeAll\'| translate}}\n        <i class="material-icons white">\n            delete_forever\n            </i>\n      </button>\n</div>',styles:[".btn-margin{margin:0 10px}._flexbox{flex-direction:column;align-items:center;display:flex}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={genericData:[{type:l.Input}],genericForm:[{type:l.Input}],genericEdit:[{type:l.Input}],editquestion:[{type:l.Output}]},e}(),w=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:l.Component,args:[{selector:"app-image-card",template:'<span *ngFor="let url of imageUrl">\n  <div class="card">\n    <div class="roundedCard">\n      <img src={{url}} class="imageCard">\n    </div>\n  </div>\n</span>',styles:[".roundedCard{display:flex;align-items:center;margin:10px;height:130px;border:2px solid var(--grey-color);border-radius:5px;width:130px;background-color:var(--light-grey-color)}.imageCard{width:126px;height:auto}.card{display:inline-block}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={imageUrl:[{type:l.Input}]},e}(),C=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:l.Component,args:[{selector:"app-loader",template:'<ngx-spinner bdColor="rgba(51,51,51,0.8)" size="medium" color="#fff" type="ball-clip-rotate"></ngx-spinner>\n',styles:[""]}]}],e.ctorParameters=function(){return[]},e}(),k=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:l.Component,args:[{selector:"app-number-field",template:'<div [formGroup]="genericForm">\n  <mat-form-field *ngIf="genericData.validation.required" class="col-sm-6 fixSize _halfWidth">\n    <span *ngIf="genericData.input == \'number\'" matPrefix>+91 &nbsp;</span>\n    <input [disabled]="!genericData.editable" type="number"  pattern="^[0-9]{10}$" placeholder="{{genericData.label}} " formControlName="{{genericData.field}}" matInput required > \n  </mat-form-field>\n\n  <mat-form-field  *ngIf="!genericData.validation.required" class="col-sm-6 fixSize _halfWidth">\n      <span *ngIf="genericData.input == \'number\'" matPrefix>+91 &nbsp;</span>\n      <input type="number"  [disabled]="!genericData.editable" placeholder="{{genericData.label}} " formControlName="{{genericData.field}}" matInput  > \n    </mat-form-field>\n</div>',styles:[".bold{font-size:15px;font-weight:1000}.right{text-align:right}.fixSize{height:54.6px}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={genericData:[{type:l.Input}],genericForm:[{type:l.Input}],genericEdit:[{type:l.Input}]},e}(),D=function(){function e(e,n){this.location=e,this.spinner=n}return e.prototype.onBack=function(){this.location.back()},e.prototype.loaderShow=function(){this.spinner.show()},e.prototype.loaderHide=function(){this.spinner.hide()},e.prototype.toGroup=function(e){var n=this,t={};return e.forEach(function(e){"array"==e.input?t[e.field]=n.createFormArray(e):t[e.field]=e.validation.required?new o.FormControl(e.value||"",o.Validators.required):new o.FormControl(e.value||"")}),new o.FormGroup(t)},e.prototype.createFormArray=function(e){var n=[];return e.array.forEach(function(e){n[e.field]=e.validation.required?new o.FormControl(e.value||"",o.Validators.required):new o.FormControl(e.value||"")}),new o.FormArray(n)},e.decorators=[{type:l.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:a.Location},{type:f.NgxSpinnerService}]},e.ngInjectableDef=l.defineInjectable({factory:function(){return new e(l.inject(a.Location),l.inject(f.NgxSpinnerService))},token:e,providedIn:"root"}),e}(),M=function(){function e(e,n){this.dialog=e,this.utilityService=n,this.sendMarkAsComplete=new l.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.openDialog=function(){var n=this;this.dialog.open(y,{width:"450px",disableClose:!0}).afterClosed().subscribe(function(e){e&&n.sendFlag()})},e.prototype.sendFlag=function(){this.sendMarkAsComplete.emit(!0)},e.prototype.onBack=function(){this.utilityService.onBack()},e.decorators=[{type:l.Component,args:[{selector:"app-parent-heading",template:'<div class="horizontalLine">\n  <span class=" alingCenterlineParentHeading">\n    <div>\n      <h4 class="primaryColor">{{schoolName}}</h4>\n    </div>\n    \x3c!-- <span *ngIf="genericHeading == \'headings.parentListHeading\' && atleastOneComplete"><button mat-raised-button  class=" btnColor "(click)="openDialog()">{{\'buttons.markasComplete\' | translate}}</button></span> --\x3e\n    <span *ngIf="genericHeading == \'headings.parentListHeading\' && atleastOneComplete"><span class=" active " (click)="openDialog()">{{\'buttons.markasComplete\'\n        | translate}}</span></span>\n  </span>\n  <mat-divider *ngIf="schoolName || schoolNameDivider" class="Margin noPadding"></mat-divider>\n  \x3c!-- <span class="alingCenterline smallMargin"  *ngIf="!showControl"> --\x3e\n  <span class="alingCenterline smallMargin">\n    <button  *ngIf="!showControl" class="noPadding" mat-button (click)="onBack()"><i class="material-icons">\n        keyboard_arrow_left\n      </i>\n      <span>Back</span>\n    </button>\n    <span class="heading  space noMargin space" *ngIf="genericHeading">\n      {{ genericHeading | translate}}\n    </span>\n\n  </span>\n</div>',styles:[".heading{margin-top:0;font-size:18px}.btnColor{background-color:var(--primary-color);color:var(--white-color);margin-left:30px}.alingCenterlineParentHeading{display:flex;align-items:center;flex-wrap:wrap}.active{border-radius:12px;border:1px solid var(--primary-color);padding:2px 8px;background-color:var(--button-background-color);cursor:pointer;margin-left:25px}.horizontalLine{display:flex;flex-direction:column}.noPadding{padding:0}.noMargin{margin:0}.Margin{margin:0 -20px}.primaryColor{color:var(--primary-color)}"]}]}],e.ctorParameters=function(){return[{type:i.MatDialog},{type:D}]},e.propDecorators={genericHeading:[{type:l.Input}],schoolName:[{type:l.Input}],atleastOneComplete:[{type:l.Input}],schoolId:[{type:l.Input}],schoolNameDivider:[{type:l.Input}],showControl:[{type:l.Input}],sendMarkAsComplete:[{type:l.Output}]},e}(),F=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:l.Component,args:[{selector:"app-select-field",template:'<div [formGroup]="genericForm" >\n    <div class=" col-sm-6 fixSize _halfWidth">\n      <mat-checkbox  [disabled]="!genericData.editable" formControlName ="{{genericData.field}}" value="{{genericData.value}}" required>{{genericData.label}}</mat-checkbox>\n    </div>\n  </div>',styles:[""]}]}],e.ctorParameters=function(){return[]},e.propDecorators={genericData:[{type:l.Input}],genericForm:[{type:l.Input}],genericEdit:[{type:l.Input}]},e}(),P=function(){function e(){}return e.prototype.ngOnInit=function(){},e.decorators=[{type:l.Component,args:[{selector:"app-text-field",template:'<div [formGroup]= "genericForm" *ngIf="genericForm">\n    <mat-form-field  class="col-sm-6 fixSize _halfWidth">\n            <input [disabled]="!genericData.editable" matInput   type="text" placeholder="{{genericData.label}} " formControlName="{{genericData?.field}}"  required>\n    </mat-form-field>\n</div>\n\n\n',styles:[".bold{font-size:15px;font-weight:550}.right{text-align:right}.fixSize{height:54.6px}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={genericData:[{type:l.Input}],genericForm:[{type:l.Input}],genericEdit:[{type:l.Input}]},e}(),S=function(){function e(){}return e.prototype.ngOnInit=function(){},e.prototype.check=function(e){},e.decorators=[{type:l.Component,args:[{selector:"app-textarea-field",template:'<div [formGroup]="genericForm" *ngIf="genericForm"  >\n    <mat-form-field class="col-sm-6 fixSize  _halfWidth">\n        <div class="form-group">\n            <textarea [disabled]="!genericData.editable" matInput formControlName="{{genericData.field}}" required placeholder="{{genericData.label}} "></textarea>\n        </div>\n    </mat-form-field>\n</div>',styles:[".bold{font-size:15px;font-weight:550}.right{text-align:right}.fixSize{height:54.6px;margin-bottom:30px}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={genericData:[{type:l.Input}],genericForm:[{type:l.Input}],genericEdit:[{type:l.Input}]},e}(),q=function(){function e(){this.sendSearchValue=new l.EventEmitter}return e.prototype.ngOnInit=function(){this.search()},e.prototype.search=function(){var n=this,e=document.getElementById("search");t.fromEvent(e,"keyup").pipe(r.debounceTime(1e3)).subscribe(function(e){n.sendSearchValue.emit(n.searchValue)})},e.decorators=[{type:l.Directive,args:[{selector:"[appSearch]"}]}],e.ctorParameters=function(){return[]},e.propDecorators={searchValue:[{type:l.Input}],sendSearchValue:[{type:l.Output}]},e}(),E=function(){function e(){this.language=["English"]}return e.decorators=[{type:l.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=l.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),N=function(){function e(){this.showDropdown=!1,this.Logout=new l.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.openDropdown=function(){this.showDropdown=!this.showDropdown},e.prototype.onSignout=function(){this.Logout.emit(!0)},e.decorators=[{type:l.Component,args:[{selector:"app-navbar",template:'<div *ngIf="currentUser">\n\n<nav class="navbar noMarginPadding ">\n\n    <div class="col-sm-6  col-md-6 col-xs-6 col-lg-6 alingCenterline noMarginPadding">\n  \n      <img  class="logo" src ={{logo}} >\n      \x3c!-- <mat-card-title class="pageBrand">\n        <strong>{{ \'brand\' | translate }}</strong>\n      </mat-card-title> --\x3e\n        </div>\n  \n    \x3c!-- <div class="col-sm-4 mod ">\n         <mat-card-title style="font-size:18px; color:gray; text-align: center;" >\n          Sikhshalocham Samikhsa \n            <mat-icon svgIcon="thumbs-up" style="font-size:29px; color: gray;">\n            </mat-icon>\n        </mat-card-title> \n      </div> --\x3e\n  \n    <div class="col-sm-6 col-md-6 col-xs-6 col-lg-6 ">\n      <span class="right _flex-box alingCenterline">\n        <button mat-icon-button (click)="openDropdown()">\n              <i class="material-icons">\n                  apps\n                  </i>\n        </button>\n            <div id="overlay" (click)="openDropdown()" *ngIf="showDropdown">\n              <div class="dropdownDiv">\n                <div class="col-sm-3 dropdownFeature">\n                    <div class="verticalCenteralign">\n                      <div class="apple" >\n                        <i class="material-icons" id="whiteIcon">\n                          create\n                        </i>\n                      </div>\n                      <div class="active">\n                        {{\'menuDropdown.myApps\' | translate}}\n                      </div>\n                    </div>\n                </div>\n              </div>\n            </div>\n      <span mat-button [matMenuTriggerFor]="menu" class="alingCenterline _cursor-pointer">\n              <i class="material-icons brand dropdownIcon">\n                  person\n                  </i>\n            \x3c!-- <span class="brand ">{{currentUser?.name}}</span> --\x3e\n        <i class="material-icons brand icon">\n          keyboard_arrow_down\n        </i>\n      </span>\n      <mat-menu #menu="matMenu">\n        <span mat-menu-item class="matmenuIcon">\n            <i class="material-icons">\n                supervised_user_circle\n            </i>\n            <span class="padding">{{currentUser?.email}}</span>\n        </span>\n        <mat-divider></mat-divider>\n        <span mat-menu-item  class="matmenuIcon black">\n          <i class="material-icons">\n            done\n          </i>\n          <span class="padding">{{currentUser?.name}}</span>\n        </span>\n        <mat-divider></mat-divider>\n        <span mat-menu-item class="padding" (click)="onSignout()">\n          <span class="bigPadding black">\n              {{\'menuDropdown.signOut\' | translate}}\n          </span>\n        </span>\n      </mat-menu>\n      \x3c!-- <div class="right horizontalLine">\n        <i class="material-icons brand helpIcon">\n          help_outline\n        </i>\n      </div> --\x3e\n  </span>\n  \n    </div>\n  </nav>\n</div>',styles:['.noMarginPadding{margin:0;padding:0}.brand{color:var(--primary-color);margin-bottom:0}.logo{height:50px}.apple{background-image:linear-gradient(to bottom,#1cdffe 10%,#2462e9 90%);height:80px;width:80px;border:1px solid var(--primary-color);border-radius:15px;padding:10px;display:flex;align-items:center;justify-content:center}.horizontalLine{position:relative;padding:0 8px}.icon{font-size:16px;padding-right:10px}.helpIcon{font-weight:10px}.horizontalLine:before{content:"";background:var(--border-color);position:absolute;bottom:20%;left:-5px;height:60%;width:1px}.navbar{display:flex;align-items:center}.line{line-height:12px}.navicon{font-size:80px;color:linear-gradient(to bottom,from var(--primary-color) 100%,to var(--blue-gradient) 100%)}.dropdownDiv{color:#000;background-color:#fff;position:absolute;min-width:500px;height:350px;right:8px;top:35px;z-index:105;border-radius:2px;box-shadow:0 0 3px 3px rgba(0,0,0,.08);margin:20px;padding:20px 0}.dropdownDiv:before{content:"";position:absolute;top:-27px;right:60px;border-left:13px solid transparent;border-right:13px solid transparent;border-top:13px solid transparent;border-bottom:13px solid rgba(0,0,0,.08)}.dropdownDiv:after{content:"";position:absolute;top:-24px;right:60px;border-left:12px solid transparent;border-right:12px solid transparent;border-top:12px solid transparent;border-bottom:12px solid #fff}.dropdownFeature{padding:20px}#overlay{position:fixed;display:hidden;width:100%;height:100%;top:0;left:0;right:0;bottom:0;background-color:transperent;z-index:101}#whiteIcon{color:#fff;font-size:45px;line-height:1}.verticalCenteralign{display:flex;flex-direction:column;align-items:center;cursor:pointer}.pageBrand{font-size:18px;padding:0 10px;margin-bottom:0}.pageMenu{margin-bottom:0}.alingCenterline{display:flex;align-items:center}.dropdownIcon{top:1px;line-height:2}.active{margin-top:10px;border-radius:12px;border:1px solid #46a9ff;padding:5px 10px;background-color:#e5f2fe;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;white-space:nowrap;font-size:11px}.right{display:flex;justify-content:flex-end}.matmenuIcon{display:flex;align-items:center;color:#bababa}.padding{padding-left:10px}.bigPadding{padding-left:40px}.black{color:#4c4c4c}']}]}],e.ctorParameters=function(){return[]},e.propDecorators={dropdownLabel:[{type:l.Input}],currentUser:[{type:l.Input}],logo:[{type:l.Input}],Logout:[{type:l.Output}]},e}(),O=function(){function e(){}return e.prototype.ngOnInit=function(){console.log(this.programsShow)},e.decorators=[{type:l.Component,args:[{selector:"app-sidenav",template:'  <div class="sideNavheading" routerLink="../programs"  matTooltip="{{\'message.goToProgramDashboard\' | translate}}" *ngIf="programsShow">\n    <i class="material-icons">\n      keyboard_arrow_left\n    </i> {{ \'headings.programs\' | translate }}\n  </div>\n    \x3c!-- <div routerLink = "{{option.anchorLink}}"  [routerLinkActiveOptions]="{exact:true}" routerLinkActive="active"*ngFor="let option of link?.options"  class="subHeading"> --\x3e\n    \x3c!-- <div [routerLink]="[\'assessments/:programId/:assessmentId/\'+option.link?.anchorLink,option.link.programId,option.link.assessmentId ]" routerLinkActive="active" *ngFor="let option of link?.options"  class="subHeading"> --\x3e\n        \x3c!-- <div [routerLink]="[option.link.anchorLink ]"  [queryParamsHandling]="preserve" [queryParams]="{ programId : option.link.programId , assessmentId : option.link.assessmentId}" routerLinkActive="active" *ngFor="let option of link?.options"  class="subHeading"> --\x3e\n\n\n\n    <div [routerLink]="[option.anchorLink ]"  routerLinkActive="active" *ngFor="let option of link?.options"  class="subHeading">\n        <span class="sideNavSubheading"> \n            {{ option.value | translate }}\n          </span>\n      </div>\n   ',styles:[".sideNavSubheading{font-size:15px;padding:10px 23px;height:40px;display:flex;cursor:pointer}.subHeading{color:var(--grey-color)}.sideNavheading{height:40px;display:flex;align-items:center;padding:0 0 0 5px;cursor:pointer}.active,.sideNavheading:hover,.subHeading:hover{color:var(--white-color);background-color:var(--primary-color)}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={link:[{type:l.Input}],programsShow:[{type:l.Input}]},e}(),z=function(){function e(){this.openDrawer=new l.EventEmitter,this.Logout=new l.EventEmitter}return e.prototype.ngOnInit=function(){this.openSideNav()},e.prototype.onSignout=function(){this.Logout.emit(!0)},e.prototype.openSideNav=function(){this.openDrawer.emit(!0)},e.decorators=[{type:l.Component,args:[{selector:"app-responsive-navbar",template:'<nav class="responsiveNavbar noMarginPadding">\n  <body class=" col-xs-12 noMarginPadding alingCenterline" >\n      <span class="col-xs-4 alingCenterline noMarginPadding">\n          <button mat-icon-button>\n          <i class="material-icons" (click)="openSideNav()">\n            menu\n              </i>\n              </button>\n      </span>\n    \n    <mat-card-title class="pageBrand col-xs-4 alingCenterline">\n        <img  class="logo" src ={{logo}} >\n      \x3c!-- <strong>{{ \'brandResponsive\' | translate }}</strong> --\x3e\n    </mat-card-title>\n\n    <span class="col-xs-4 noMarginPadding _flexEnd">\n        <button mat-icon-button [matMenuTriggerFor]="menu" class=" _cursor-pointer">\n          <i class="material-icons dropdownIcon">\n              person\n              </i>\n        </button>\n        <mat-menu #menu="matMenu">\n          <span mat-menu-item class="matmenuIcon">\n            <i class="material-icons">\n              supervised_user_circle\n            </i>\n            <span class="padding">{{currentUser?.email}}</span>\n          </span>\n          <mat-divider></mat-divider>\n          <span mat-menu-item class="matmenuIcon black">\n            <i class="material-icons">\n              done\n            </i>\n            <span class="padding">{{currentUser?.name}}</span>\n          </span>\n          <mat-divider></mat-divider>\n          <span mat-menu-item class="padding" (click)="onSignout()">\n            <span class="bigPadding ">\n              {{\'menuDropdown.signOut\' | translate}}\n            </span>\n          </span>\n  \n        </mat-menu>\n      </span>\n    \n    </body>\n</nav>',styles:[".noMarginPadding{margin:0;padding:0}.icon{font-size:16px;padding-right:10px}._flexEnd{display:flex;justify-content:flex-end}.logo{height:50px}.responsiveNavbar{display:none;align-items:center;height:51px}.line{line-height:12px}.pageBrand{font-size:18px;padding:0 10px;margin-bottom:-4px;display:flex;justify-content:center}.pageMenu{margin-top:0}.alingCenterline{display:flex;align-items:center}.dropdownIcon{top:1px;margin-top:7px;font-weight:700}.active{color:var(--white-color);background-color:var(--primary-color)}.matmenuIcon{display:flex;align-items:center;color:var(--grey-color)}.padding{padding-left:10px}.bigPadding{padding-left:40px}.black{color:var(--black-color)}.responsiveLogo{margin-top:-5px}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={openDrawer:[{type:l.Output}],currentUser:[{type:l.Input}],logo:[{type:l.Input}],Logout:[{type:l.Output}]},e}(),L=function(){function e(){this.program=new l.EventEmitter}return e.prototype.ngOnInit=function(){this.currentProgramIndex=0},e.prototype.programSelect=function(e,n){this.currentProgramIndex=n,this.program.emit(e)},e.decorators=[{type:l.Component,args:[{selector:"app-program-sidenav",template:'<div class="heading">\n    {{ \'headings.programs\' | translate }}\n</div>\n<div class="subHeading" *ngFor="let results of result; let i=index" (click)="programSelect(results, i)">\n    <span class="sideNavSubheading" [ngClass]="{\'active\': currentProgramIndex === i}">\n        <div class="overFlowHidden" matTooltip="{{results.name}}" >\n            {{results.name}}\n        </div>\n    </span>\n</div>\n',styles:[".sideNavSubheading{font-size:15px;padding:10px 23px;min-height:40px;display:flex;cursor:pointer;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.subHeading{color:var(--grey-color)}.active,.subHeading:hover{color:var(--white-color);background-color:var(--primary-color)}.heading{height:40px;display:flex;align-items:center;padding:0 0 0 15px}.overFlowHidden{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={result:[{type:l.Input}],program:[{type:l.Output}]},e}(),_=function(){function e(e){this.http=e,this.language={}}return e.prototype.use=function(r){var o=this;return new Promise(function(n,e){var t="assets/i18n/"+(r||"en")+".json";o.http.get(t).subscribe(function(e){o.language=Object.assign({},e||{}),n(o.language)},function(e){o.language={},n(o.language)})})},e.decorators=[{type:l.Injectable}],e.ctorParameters=function(){return[{type:c.HttpClient}]},e}(),j=function(){function e(e){this.translate=e,this.resarray="",this.obj={}}return e.prototype.transform=function(e){var n=this;if(-1===e.indexOf("."))return this.translate.language[e]||e;var t=e.split(".");return this.resarray=this.translate.language,t.forEach(function(e){n.resarray&&(n.resarray=n.resarray[e])}),this.resarray||e},e.decorators=[{type:l.Pipe,args:[{name:"translate",pure:!1}]}],e.ctorParameters=function(){return[{type:_}]},e}(),H=function(){function e(){}return e.prototype.transform=function(e){if(null==e||""==e)return e;e=e.trim();for(var n="",t=0;t<e.length;t++)/[A-Z]/.test(e[t])&&0!=t&&/[a-z]/.test(e[t-1])&&(n+=" "),0==t&&/[a-z]/.test(e[t])?n+=e[t].toUpperCase():n+=e[t];return n},e.decorators=[{type:l.Pipe,args:[{name:"camelcase",pure:!1}]}],e.ctorParameters=function(){return[]},e}(),R=function(){function e(){}return e.prototype.transform=function(e){return null==e||""==e?"-NA-":e},e.decorators=[{type:l.Pipe,args:[{name:"blank",pure:!1}]}],e.ctorParameters=function(){return[]},e}(),T=function(){function e(){}return e.prototype.intercept=function(e,n){var t=localStorage.getItem("auth-token");if(e.url.includes("programsSubmissionStatus/DCPCR?evidenceId=")){var r=e.clone({setHeaders:{"internal-access-token":localStorage.getItem("downloadReport-token")}});return n.handle(r)}var o=e.clone({setHeaders:{"X-authenticated-user-token":t}});return n.handle(o)},e.decorators=[{type:l.Injectable}],e}(),A=function(){function e(e){this.http=e}return e.prototype.get=function(e){return this.http.get(e)},e.prototype.getJSON=function(e){return this.http.get(e)},e.prototype.post=function(e,n){return this.http.post(e,n)},e.prototype.upload=function(e,n,t){var r=new FormData;return n&&Array.from(n).forEach(function(e){r.append(t,e)}),console.log(r),this.http.post(e,r,{reportProgress:!0,observe:"events"})},e.decorators=[{type:l.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:c.HttpClient}]},e.ngInjectableDef=l.defineInjectable({factory:function(){return new e(l.inject(c.HttpClient))},token:e,providedIn:"root"}),e}(),B=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[_,D,T,A]}},e.decorators=[{type:l.NgModule,args:[{declarations:[j,H,R,N,O,z,L],imports:[f.NgxSpinnerModule,a.CommonModule,s.RouterModule,c.HttpClientModule,i.MatButtonModule,i.MatMenuModule,i.MatIconModule,p.HttpModule,i.MatCardModule,c.HttpClientModule,i.MatDividerModule,i.MatTooltipModule],providers:[{provide:c.HTTP_INTERCEPTORS,useClass:T,multi:!0}],exports:[j,N,O,z,H,R,L,a.CommonModule]}]}],e}(),U=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[E]}},e.decorators=[{type:l.NgModule,args:[{declarations:[x,y,P,b,k,S,h,M,w,C,F,I,q,v],imports:[a.CommonModule,o.FormsModule,i.MatCheckboxModule,o.ReactiveFormsModule,i.MatInputModule,g.MatProgressSpinnerModule,u.MatButtonModule,i.MatDividerModule,d.MatDialogModule,i.MatRadioModule,n.MatSelectModule,s.RouterModule,B,m.MatSnackBarModule,f.NgxSpinnerModule],entryComponents:[y],exports:[x,f.NgxSpinnerModule,h,M,m.MatSnackBarModule,w,C,q,v]}]}],e}();e.BreadcrumbComponent=h,e.DashboardBlocksComponent=v,e.DialogBoxComponent=y,e.DropdownFieldComponent=b,e.DynamicFormComponent=x,e.FormArrayFieldComponent=I,e.ImageCardComponent=w,e.LoaderComponent=C,e.NumberFieldComponent=k,e.ParentHeadingComponent=M,e.SelectFieldComponent=F,e.TextFieldComponent=P,e.TextareaFieldComponent=S,e.SearchDirective=q,e.ResourceService=E,e.SharedModule=U,e.CoreModule=B,e.CamelCasePipe=H,e.NoValuePipe=R,e.TranslatePipe=j,e.ApiService=A,e.ApiInterceptor=T,e.TranslateService=_,e.UtilityService=D,e.NavbarComponent=N,e.ProgramSidenavComponent=L,e.ResponsiveNavbarComponent=z,e.SidenavComponent=O,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=shikshalokam.umd.min.js.map